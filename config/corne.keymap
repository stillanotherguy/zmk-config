/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <10 6 18 39 30 40 41 19 31 7 9 10 19 20 21 22 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE  &kp Q  &kp W            &kp E                &kp R            &kp T            &kp Y      &kp U             &kp I                 &kp O             &kp P     &kp MINUS
&kp BSLH   &kp A  &hml LEFT_GUI S  &hml LEFT_CONTROL D  &hml LEFT_ALT F  &kp G            &kp H      &hmr RIGHT_ALT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_GUI L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X            &kp C                &kp V            &kp B            &kp N      &kp M             &kp COMMA             &kp DOT           &kp FSLH  &kp RSHIFT
                                   &lt 2 ESC            &lt 1 TAB        &kp BACKSPACE    &kp SPACE  &lt 3 ENTER       &lt 4 DELETE
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans        &trans            &trans        &trans    &trans  &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_UP    &trans
&trans  &trans  &kp LEFT_GUI  &kp LEFT_CONTROL  &kp LEFT_ALT  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN  &to 0
&trans  &trans  &trans        &trans            &trans        &trans    &trans  &kp LC(X)       &kp LC(C)       &kp LC(P)        &trans         &to 1
                              &trans            &trans        &trans    &trans  &trans          &trans
            >;
        };

        numpad_layer {
            bindings = <
&bt BT_PRV  &trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_VOLUME_UP      &kp KP_DIVIDE    &kp N7  &kp N8  &kp N9  &kp MINUS  &trans
&bt BT_NXT  &trans  &kp LEFT_GUI    &kp LEFT_CONTROL  &kp LEFT_ALT  &kp C_VOLUME_DOWN    &kp KP_MULTIPLY  &kp N4  &kp N5  &kp N6  &kp PLUS   &to 0
&bt BT_CLR  &trans  &trans          &trans            &trans        &kp C_MUTE           &kp N0           &kp N1  &kp N2  &kp N3  &kp EQUAL  &to 2
                                    &trans            &trans        &trans               &trans           &trans  &trans
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH          &kp DLLR           &kp PRCNT    &kp CARET  &kp AMPS       &kp ASTRK          &kp LPAR       &kp RPAR  &kp EQUAL
&trans  &trans    &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans       &trans     &kp RIGHT_ALT  &kp RIGHT_CONTROL  &kp RIGHT_GUI  &trans    &to 0
&trans  &trans    &trans  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans       &trans     &trans         &trans             &trans         &trans    &to 3
                          &trans            &trans             &trans       &trans     &trans         &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &trans  &trans    &trans     &trans    &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &trans  &kp RALT  &kp RCTRL  &kp RGUI  &trans  &to 0
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &trans  &trans    &trans     &trans    &trans  &to 4
                         &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };
    };
};
